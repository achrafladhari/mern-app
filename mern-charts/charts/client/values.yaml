# Default values for client.
# This is a YAML-formatted file.

# Replica count for deployment
replicaCount: 3

# Container image configuration
image:
  repository: chrayef/mern-client
  pullPolicy: IfNotPresent
  tag: latest

# Image pull secrets
imagePullSecrets: []

# Service account settings
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod annotations and labels
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9100"  # Replace with your application's metrics port if different
  prometheus.io/path: "/metrics"  # Default path for Prometheus scraping

podLabels: {}

# Security context for pods
podSecurityContext: {}
securityContext: {}

# Service configuration
service:
  type: ClusterIP
  port: 3000  # Use ClusterIP, LoadBalancer, or NodePort as needed
# Service configuration for metrics (port 9100)
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  hosts:
    - host:
      paths:
        - path: /metrics/(.*)  # Expose metrics on /metrics path
          pathType: ImplementationSpecific   # Optional: use prefix to match /metrics or sub-paths
          backend:
            service:
              name: mern-app-client  # The service for the metrics
              port:
                number: 9100
        - path: /(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: mern-app-client  # The service for the main app
              port:
                number: 3000

  tls: []

# Environment variables for the application
env:
  - name: REACT_APP_API_URL
    value: http://mern-app.francecentral.cloudapp.azure.com/api

# Resources
resources: {}

# Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /live
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5

readinessProbe:
  httpGet:
    path: /ready
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5

# Horizontal Pod Autoscaler settings
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

# Volumes and volume mounts
volumes: []
volumeMounts: []

# Node selector, tolerations, and affinity
nodeSelector: {}
tolerations: []
affinity: {}
